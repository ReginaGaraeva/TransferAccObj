//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service.Host.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://objecttransferservice.ru/", ConfigurationName="ServiceReference1.IObjectTransferService")]
    public interface IObjectTransferService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://objecttransferservice.ru/IObjectTransferService/GetMethodsInfo", ReplyAction="http://objecttransferservice.ru/IObjectTransferService/GetMethodsInfoResponse")]
        ObjectTransferWCF.Models.MethodModel[] GetMethodsInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://objecttransferservice.ru/IObjectTransferService/CreateAccountingObject", ReplyAction="http://objecttransferservice.ru/IObjectTransferService/CreateAccountingObjectResp" +
            "onse")]
        string CreateAccountingObject(string inventaryNumber, string description, string postingDate, string deprecationDate, string owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://objecttransferservice.ru/IObjectTransferService/UpdateAccountingObject", ReplyAction="http://objecttransferservice.ru/IObjectTransferService/UpdateAccountingObjectResp" +
            "onse")]
        string UpdateAccountingObject(string oldInventaryNumber, string inventaryNumber, string description, string postingDate, string deprecationDate, string owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://objecttransferservice.ru/IObjectTransferService/DeleteAccountingObject", ReplyAction="http://objecttransferservice.ru/IObjectTransferService/DeleteAccountingObjectResp" +
            "onse")]
        string DeleteAccountingObject(string inventaryNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IObjectTransferServiceChannel : Service.Host.ServiceReference1.IObjectTransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObjectTransferServiceClient : System.ServiceModel.ClientBase<Service.Host.ServiceReference1.IObjectTransferService>, Service.Host.ServiceReference1.IObjectTransferService {
        
        public ObjectTransferServiceClient() {
        }
        
        public ObjectTransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ObjectTransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectTransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectTransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ObjectTransferWCF.Models.MethodModel[] GetMethodsInfo() {
            return base.Channel.GetMethodsInfo();
        }
        
        public string CreateAccountingObject(string inventaryNumber, string description, string postingDate, string deprecationDate, string owner) {
            return base.Channel.CreateAccountingObject(inventaryNumber, description, postingDate, deprecationDate, owner);
        }
        
        public string UpdateAccountingObject(string oldInventaryNumber, string inventaryNumber, string description, string postingDate, string deprecationDate, string owner) {
            return base.Channel.UpdateAccountingObject(oldInventaryNumber, inventaryNumber, description, postingDate, deprecationDate, owner);
        }
        
        public string DeleteAccountingObject(string inventaryNumber) {
            return base.Channel.DeleteAccountingObject(inventaryNumber);
        }
    }
}
